//  ðŸŒŸ This was machine generated.  Do not edit. ðŸŒŸ
//  
//  Frame[0] {
//      "typeVersion": [
//          0,
//          0
//      ],
//      "custom": {
//          "query": {
//              "refId": "",
//              "type": "xml",
//              "format": "",
//              "source": "url",
//              "url": "http://127.0.0.1:8080",
//              "url_options": {
//                  "method": "",
//                  "params": null,
//                  "headers": null,
//                  "data": "",
//                  "body_type": "",
//                  "body_content_type": "",
//                  "body_form": null,
//                  "body_graphql_query": "",
//                  "body_graphql_variables": ""
//              },
//              "data": "",
//              "parser": "backend",
//              "filterExpression": "",
//              "summarizeExpression": "",
//              "summarizeBy": "",
//              "summarizeAlias": "",
//              "uql": "",
//              "groq": "",
//              "sqlite_query": "",
//              "csv_options": {
//                  "delimiter": "",
//                  "skip_empty_lines": false,
//                  "skip_lines_with_error": false,
//                  "relax_column_count": false,
//                  "columns": "",
//                  "comment": ""
//              },
//              "json_options": {
//                  "root_is_not_array": false,
//                  "columnar": false
//              },
//              "root_selector": "users.user",
//              "columns": [],
//              "computed_columns": [],
//              "filters": null,
//              "seriesCount": 0,
//              "expression": "",
//              "alias": "",
//              "dataOverrides": null,
//              "global_query_id": "",
//              "query_mode": ""
//          },
//          "data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\" ?\u003e\n\t\t\u003cusers\u003e\n\t\t\t\u003cuser\u003e\n\t\t\t\t\u003cname\u003efoo\u003c/name\u003e\n\t\t\t\t\u003cage\u003e123\u003c/age\u003e\n\t\t\t\u003c/user\u003e\n\t\t\t\u003cuser\u003e\n\t\t\t\t\u003cname\u003ebar\u003c/name\u003e\n\t\t\t\t\u003cage\u003e456\u003c/age\u003e\n\t\t\t\u003c/user\u003e\n\t\t\u003c/users\u003e",
//          "responseCodeFromServer": 200,
//          "duration": 123,
//          "error": ""
//      },
//      "executedQueryString": "###############\n## URL\n###############\n\nhttp://127.0.0.1:8080\n\n###############\n## Curl Command\n###############\n\ncurl -X 'GET' -H 'Accept: text/xml;q=0.9,text/plain' 'http://127.0.0.1:8080'"
//  }
//  Name: response
//  Dimensions: 2 Fields by 2 Rows
//  +-----------------+-----------------+
//  | Name: age       | Name: name      |
//  | Labels:         | Labels:         |
//  | Type: []*string | Type: []*string |
//  +-----------------+-----------------+
//  | 123             | foo             |
//  | 456             | bar             |
//  +-----------------+-----------------+
//  
//  
//  ðŸŒŸ This was machine generated.  Do not edit. ðŸŒŸ
{
  "status": 200,
  "frames": [
    {
      "schema": {
        "name": "response",
        "meta": {
          "typeVersion": [
            0,
            0
          ],
          "custom": {
            "query": {
              "refId": "",
              "type": "xml",
              "format": "",
              "source": "url",
              "url": "http://127.0.0.1:8080",
              "url_options": {
                "method": "",
                "params": null,
                "headers": null,
                "data": "",
                "body_type": "",
                "body_content_type": "",
                "body_form": null,
                "body_graphql_query": "",
                "body_graphql_variables": ""
              },
              "data": "",
              "parser": "backend",
              "filterExpression": "",
              "summarizeExpression": "",
              "summarizeBy": "",
              "summarizeAlias": "",
              "uql": "",
              "groq": "",
              "sqlite_query": "",
              "csv_options": {
                "delimiter": "",
                "skip_empty_lines": false,
                "skip_lines_with_error": false,
                "relax_column_count": false,
                "columns": "",
                "comment": ""
              },
              "json_options": {
                "root_is_not_array": false,
                "columnar": false
              },
              "root_selector": "users.user",
              "columns": [],
              "computed_columns": [],
              "filters": null,
              "seriesCount": 0,
              "expression": "",
              "alias": "",
              "dataOverrides": null,
              "global_query_id": "",
              "query_mode": ""
            },
            "data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\" ?\u003e\n\t\t\u003cusers\u003e\n\t\t\t\u003cuser\u003e\n\t\t\t\t\u003cname\u003efoo\u003c/name\u003e\n\t\t\t\t\u003cage\u003e123\u003c/age\u003e\n\t\t\t\u003c/user\u003e\n\t\t\t\u003cuser\u003e\n\t\t\t\t\u003cname\u003ebar\u003c/name\u003e\n\t\t\t\t\u003cage\u003e456\u003c/age\u003e\n\t\t\t\u003c/user\u003e\n\t\t\u003c/users\u003e",
            "responseCodeFromServer": 200,
            "duration": 123,
            "error": ""
          },
          "executedQueryString": "###############\n## URL\n###############\n\nhttp://127.0.0.1:8080\n\n###############\n## Curl Command\n###############\n\ncurl -X 'GET' -H 'Accept: text/xml;q=0.9,text/plain' 'http://127.0.0.1:8080'"
        },
        "fields": [
          {
            "name": "age",
            "type": "string",
            "typeInfo": {
              "frame": "string",
              "nullable": true
            }
          },
          {
            "name": "name",
            "type": "string",
            "typeInfo": {
              "frame": "string",
              "nullable": true
            }
          }
        ]
      },
      "data": {
        "values": [
          [
            "123",
            "456"
          ],
          [
            "foo",
            "bar"
          ]
        ]
      }
    }
  ]
}