name: Pull Requests
on: [pull_request]
jobs:
  build-test-frontend:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: NodeJS Setup
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: |
            ~/.cache/Cypress
             node_modules
             ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install dependencies
        run: CYPRESS_CACHE_FOLDER=/home/runner/.cache/Cypress yarn install --frozen-lockfile;
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Build Frontend
        run: |
          yarn ci-build
      - name: Save Frontend artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-frontend
          if-no-files-found: error
          path: dist
  build-test-backend:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Get go cache directory path
        id: go-cache-paths
        run: echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Test backend
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: coverage
      - name: Build backend
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: buildAll
      - name: Save Backend artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-backend
          if-no-files-found: error
          path: dist
  e2e:
    runs-on: ubuntu-20.04
    needs: [build-test-frontend, build-test-backend]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Frontend artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts-frontend
          path: dist
      - name: Download Backend artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts-backend
          path: dist
      - name: Build Frontend
        run: chmod 755 dist/gpx_*
      - name: NodeJS Setup
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: |
            ~/.cache/Cypress
             node_modules
             ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install dependencies
        run: CYPRESS_CACHE_FOLDER=/home/runner/.cache/Cypress yarn install --frozen-lockfile;
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Start the docker container for e2e
        run: |
          docker-compose pull
          docker-compose up -d
      - name: Run E2E
        run: yarn e2e
      - name: Save E2E artifacts
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: artifacts-e2e
          if-no-files-found: error
          path: cypress/videos
      - name: Stop the docker container
        if: always()
        run: docker-compose down
