name: Build & Publish
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: NodeJS Setup
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache yarn cache
      uses: actions/cache@v2
      id: cache-yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
    - name: Install dependencies
      run: yarn install --frozen-lockfile;
      if: |
        steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
        steps.cache-node-modules.outputs.cache-hit != 'true'
    - name: Test
      run: |
        yarn test;
    - name: Build
      run: |
        yarn build;
    - name: Build Docs
      run: |
        rm -rf docs/;
        yarn docs:build;
        mkdir -p docs;
        cp -r public/ docs/
        echo $(date) > docs/LAST_UPDATED;
    - name: Publish Docs
      run: |
        git config --global user.email "actions@github.com";
        git config --global user.name "Github Actions";
        git add -f docs/;
        git commit -m "Docs update";
        git push;
    - name: Setup Go environment
      uses: actions/setup-go@v2
      with:
        go-version: "1.16"
    - name: Get go cache directory path
      id: go-cache-paths
      run: echo "::set-output name=go-mod::$(go env GOMODCACHE)"
    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
    - name: Test backend
      uses: magefile/mage-action@v1
      with:
        version: latest
        args: coverage
    - name: Build backend
      uses: magefile/mage-action@v1
      with:
        version: latest
        args: buildAll
